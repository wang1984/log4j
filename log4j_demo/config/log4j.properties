# 1.rootLogger 根
										# info	日志的级别
										# C 不同配置的变量形式
log4j.rootLogger=DEBUG,C,E,I

############################  C  #####################################
# 2.appender 追加器
										# org.apache.log4j.ConsoleAppender  追加器的类
log4j.appender.C=org.apache.log4j.ConsoleAppender

# 3.Target 输出的目的地  
                                        #System.out代表控制台  也可以输出到文件中
log4j.appender.C.Target=System.out

# 4.layout 布局方式
                                        #org.apache.log4j.PatternLayout 以自由方式布局
log4j.appender.C.layout=org.apache.log4j.PatternLayout

# 5.ConversionPattern 打印的信息格式 
log4j.appender.C.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} mehtod:%l--%n%m%n

############################  E  #####################################

# 2.appender 追加器
									 
log4j.appender.E=org.apache.log4j.DailyRollingFileAppender

# 3.File 输出的目的地  
                                     
log4j.appender.E.File=E:/error/error.log

# 4.Append  追加还是覆盖   true 追加    false 覆盖

log4j.appender.E.Append=true

# 5.Threshold    什么级别的日志要写入文件
                                     #这个是总体的级别控制，如果下面没有写级别控制就按照这个总体的级别控制执行
									 #如果下面写了级别  那么下面的级别要和总体级别 取 并集
log4j.appender.E.Threshold=ERROR

# 6.layout 布局方式
                                        #org.apache.log4j.PatternLayout 以自由方式布局
log4j.appender.E.layout=org.apache.log4j.PatternLayout

# 7.ConversionPattern 打印的信息格式 
log4j.appender.E.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} mehtod:%l--%n%m%n



############################  I  #####################################

# 2.appender 追加器
									 
log4j.appender.I=org.apache.log4j.DailyRollingFileAppender

# 3.File 输出的目的地  
                                     
log4j.appender.I.File=E:/info/info.log

# 4.Append  追加还是覆盖   true 追加    false 覆盖

log4j.appender.I.Append=true

# 5.Threshold    什么级别的日志要写入文件
                                     #这个是总体的级别控制，如果下面没有写级别控制就按照这个总体的级别控制执行
									 #如果下面写了级别  那么下面的级别要和总体级别 取 并集
log4j.appender.I.Threshold=INFO

# 6.layout 布局方式
                                        #org.apache.log4j.PatternLayout 以自由方式布局
log4j.appender.I.layout=org.apache.log4j.PatternLayout

# 7.ConversionPattern 打印的信息格式 
log4j.appender.I.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} mehtod:%l--%n%m%n




 